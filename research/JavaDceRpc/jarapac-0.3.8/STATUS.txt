Overall Status:

    Anonymous and authenticated binds (with or without NTLM1 signing & sealing)
    can be done over TCP and SMB named pipes, and it is *theoretically*
    possible to hand-code working RPC client stubs and invoke them over those
    transports.

    Client-side connection-oriented framework is more or less complete.
    Client-side connectionless framework is ~40% complete.
    Server-side (both connection-oriented and connectionless) is almost totally
    not there.

ncacn_np (Connection-oriented DCE/RPC over SMB named pipes):

    Client side is implemented, but somewhat poorly (should use an initial
    SMB transaction for PDUs, followed by reads and writes for overflow;
    this implementation just uses reads and writes, which means at least
    one extra roundtrip per request).

ncacn_ip_tcp (Connection-oriented DCE/RPC over TCP):

    Client side is implemented.

ncadg_ip_udp (Connectionless DCE/RPC over UDP):

    Client side is partially implemented; transport is mostly complete,
    but connectionless framework is only partially done.

NTLM security:

    NTLMv1 authentication with NTLM1 session security is fully implemented;
    includes:
    
        Support for signing and/or sealing with user session keys, as well as
        40-bit and 56-bit LAN Manager session keys (there is no 128-bit under
        NTLM1).

        Support for NTLMSSP key exchange.

    LMv2 authentication could maybe work, but is currently not used (there
    is some question as to the session key established; more experimentation
    is needed).
    NTLMv2 authentication could probably work, but isn't yet supported in
    jCIFS.
    NTLM2 session security is not yet implemented; since the algorithm
    for NTLM2 signatures under RPC isn't fully understood, there didn't seem
    to be much point (as sealing implies signing).


To-Do List (in rough order):

    Lots of Javadoc, and documentation in general.

    Add big-endian support to the NDR formatter (possibly EBCDIC as well).

    DONE Implement the Endpoint Mapper client stub.

    Finish the connectionless client-side framework.

    Implement the Conversation Manager client stub.

    Start implementing some more exciting client stubs, such as samr, etc.

    Design and implement the server-side connection-oriented and
    connectionless frameworks.

    Look at removing the NTLM dependency on jCIFS (as it would be neighborly
    to support other SMB client implementations without requiring jCIFS
    as well).  It's also possible that big-endian NDR support would require
    an overhaul of the NTLM messages (as I'm not clear whether they are
    NDR structures or not).

    Find/write an IDL compiler to generate interface and stub classes.
    There was talk on #samba-technical surrounding an IDL compiler in
    the works which would generate intermediary XML; this would be ideal, as
    XML processing is fairly easy in Java.

    Experiment with NTLM2 session security.

    Implement the NetLogon secure channel and netlogon client stub.

